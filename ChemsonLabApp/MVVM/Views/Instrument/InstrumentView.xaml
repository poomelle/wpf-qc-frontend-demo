<ContentControl x:Class="ChemsonLabApp.MVVM.Views.Instrument.InstrumentView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:ChemsonLabApp.MVVM.Views.Instrument"
                xmlns:Icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                xmlns:constants="clr-namespace:ChemsonLabApp.Constants"
                xmlns:converters="clr-namespace:ChemsonLabApp.Converters"
                xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:controls="clr-namespace:ChemsonLabApp.Controls.InstrumentComboBox"
                xmlns:StatusComboBox="clr-namespace:ChemsonLabApp.Controls.StatusComboBox"
                mc:Ignorable="d">

    <ContentControl.Resources>
        <converters:BoolToActiveConverter x:Key="BoolToActiveConverter"/>
        <converters:InverseBoolConverter x:Key="inversebool"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <DataTemplate
            x:Key="InstrumentDataGridTemplate">
            <Border
                Style="{StaticResource DataGridItemBorder}"
                Visibility="{Binding show, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label
                        Grid.Column="0"
                        Content="{Binding name}"
                        Style="{StaticResource DataGridLabel}"
                        Visibility="{Binding isViewMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBox
                        Grid.Column="0"
                        Text="{Binding name, Mode=TwoWay}"
                        Style="{StaticResource DataGridTextBox}"
                        Visibility="{Binding isEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Label
                        Grid.Column="1"
                        Content="{Binding status, Converter={StaticResource BoolToActiveConverter}}"
                        Style="{StaticResource DataGridLabel}"
                        Visibility="{Binding isViewMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <ComboBox
                        Grid.Column="1"
                        ItemsSource="{x:Static constants:Constants.Status}"
                        SelectedItem="{Binding status, Mode=TwoWay, Converter={StaticResource BoolToActiveConverter}}"
                        Style="{StaticResource DataGridComboBox}"
                        Visibility="{Binding isEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <StackPanel
                        Grid.Column="2"
                        Orientation="Horizontal">
                        <Button
                            x:Name="EditToggleButton"
                            Style="{StaticResource GridEditButton}"
                            Margin="0 0 10 0"
                            Command="{Binding DataContext.IsViewToggleCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                            CommandParameter="{Binding}">
                            <Icons:PackIconMaterial
                                Style="{StaticResource GridButtonIcon}"
                                Kind="PencilOffOutline"/>
                        </Button>
                        <Button
                            Style="{StaticResource GridSaveButton}"
                            Margin="0 0 10 0"
                            IsEnabled="{Binding isViewMode, Converter={StaticResource inversebool}}"
                            Command="{Binding DataContext.UpdateInstrumentCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                            CommandParameter="{Binding}">
                            <Icons:PackIconMaterial
                                Style="{StaticResource GridButtonIcon}"
                                Kind="ContentSave"/>
                        </Button>
                        <Button
                            Style="{StaticResource GridRemoveButton}"
                            Command="{Binding DataContext.ShowDeleteInstrumentView, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                            CommandParameter="{Binding}">
                            <Icons:PackIconMaterial
                                Style="{StaticResource GridButtonIcon}"
                                Kind="DeleteOutline"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>
    </ContentControl.Resources>
    
    
    
    <Grid
        Style="{StaticResource ContentGridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.2*"/>
            <RowDefinition Height="0.8*"/>
        </Grid.RowDefinitions>
        <Grid
            Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button
                Grid.Row="0"
                Style="{StaticResource BaseButton}"
                Content="New Instrument"
                Command="{Binding ShowAddNewInsturmentView}"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"/>
            <StackPanel
                Grid.Row="1"
                Orientation="Horizontal"
                HorizontalAlignment="Left"
                VerticalAlignment="Center">
                <controls:InstrumentComboBox InstrumentChangedCommand="{Binding ComboBoxInstrumentSelectCommand}"/>
                <StatusComboBox:StatusComboBox
                    StatusName="{Binding StatusComboBox}"
                    StatusChangeCommand="{Binding ComboBoxInstrumentSelectCommand}"/>
                <Button
                    Style="{StaticResource BaseButton}"
                    Content="Refresh"
                    Margin="40,0,0,0"
                    Command="{Binding ReloadInstrumentsCommand}"/>
            </StackPanel>
        </Grid>
        <Border
            Grid.Row="1"
            Style="{StaticResource DataGridBorder}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid
                    Grid.Row="0"
                    Height="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label
                        Grid.Column="0"
                        Content="Instrument"
                        Style="{StaticResource DataGridHeaderLabel}"/>
                    <Label
                        Grid.Column="1"
                        Content="Status"
                        Style="{StaticResource DataGridHeaderLabel}"/>
                    <Label
                        Grid.Column="2"
                        Content="Operation"
                        Style="{StaticResource DataGridHeaderLabel}"/>
                </Grid>
                <ListBox
                    Grid.Row="1"
                    ItemsSource="{Binding Instruments}"
                    ItemTemplate="{StaticResource InstrumentDataGridTemplate}"
                    Style="{StaticResource MainMenuListBox}"
                    HorizontalContentAlignment="Stretch"
                    ItemContainerStyle="{StaticResource DataGridListBoxItem}">
                </ListBox>
            </Grid>
        </Border>
    </Grid>
</ContentControl>
